# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ['electron']
  pull_request:
    branches: ['electron']

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install Wine
        run: |
          sudo apt install wine64
      - run: npm ci
      - run: npm run build --if-present
      - name: Zip the Windows folder
        run: zip -j todo_win32.zip build/todo-win32-x64/*
      - name: Zip the Linux folder
        run: zip -j todo_linux.zip build/todo-linux-x64/*
      - name: Zip the Mac folder
        run: zip -j todo_max.zip build/todo-darwin-x64/*
      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          tag_name: Release ${{ github.run_id }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload Windows zip file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./todo_win32.zip
          asset_name: todo_win32.zip
          asset_content_type: application/zip
      - name: Upload Linux zip file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./todo_linux.zip
          asset_name: todo_linux.zip
          asset_content_type: application/zip
      - name: Upload Mac zip file
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./todo_mac.zip
          asset_name: todo_mac.zip
          asset_content_type: application/zip
